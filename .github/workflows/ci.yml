on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - dev

jobs:
  format:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: '22.3.2'
          elixir-version: '1.10.3'
      - run: mix deps.get
      - run: mix format --check-formatted

  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:12.2
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: '22.3.2'
          elixir-version: '1.10.3'
      - run: mix deps.get
      - run: mix test

  deploy:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/master'

    needs:
      - format
      - test

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: '3'
      - run: pip install gigalixir --ignore-installed six
      - run: gigalixir login -y -e '${{ secrets.GIGALIXIR_EMAIL }}' -p '${{ secrets.GIGALIXIR_PASSWORD }}'
      - run: gigalixir git:remote ${{ secrets.GIGALIXIR_APPNAME }}
      - run: git push gigalixir
